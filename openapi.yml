openapi: '3.0.2'
info:
  title: Futureday Chat
  version: "1.0"

servers:
  - url: http://localhost:7071
    description: local development
  - url: https://futureday.azurewebsites.net
    description: default deployment - you'll probybly need to adapt this

security:
  - ApiKeyAuth: []

paths:
  /api/user:
    get:
      description: "List known users application"
      operationId: userList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      description: "Add new user to application"
      operationId: userCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "400":
          description: Bad Request
  /api/user/{userId}/chat:
    parameters:
      - $ref: "#/components/parameters/userId"
    get:
      description: "List chats of user"
      operationId: userChatList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Chat"
  /api/chat:
    get:
      description: "List known chats."
      operationId: chatList
      parameters:
        - in: query
          name: userId
          schema:
            type: string
            format: uuid
          description: Filter chats with userId.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Chat"
    post:
      description: "Add new chat"
      operationId: chatCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatCreate"
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Chat"
        "400":
          description: Bad Request
  /api/chat/{chatId}:
    parameters:
      - $ref: "#/components/parameters/chatId"
    get:
      description: "one specific chat"
      operationId: chatRead
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chat"
        "404":
          description: Not Found
    put:
      description: "update chat"
      operationId: chatUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Chat"
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chat"
        "404":
          description: Not Found
  /api/chat/{chatId}/message:
    parameters:
      - $ref: "#/components/parameters/chatId"
    get:
      description: "list messages of chat"
      operationId: messageList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Message"
        "404":
          description: Not Found
    post:
      description: "Add new message to chat"
      operationId: messageCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageCreate"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        "400":
          description: Bad Request

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-functions-key
  schemas:
    User:
      required:
        - "name"
        - "id"
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        avatarUrl:
          type: string
    UserCreate:
      required:
        - "name"
        - "password"
      type: object
      properties:
        name:
          type: string
        password:
          type: string
    Message:
      type: object
      properties:
        id:
          type: string
          format: uuid
        body:
          type: string
        userId:
          type: string
          format: uuid
        chatId:
          type: string
          format: uuid
        createdAtUtc:
          type: string
          format: date-time
      required:
        - id
        - body
        - userId
        - chatId
        - createdAtUtc
    MessageCreate:
      type: object
      properties:
        body:
          type: string
        userId:
          type: string
          format: uuid
      required:
        - body
        - userId
    Chat:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        userIds:
          type: array
          items:
            type: string
            format: uuid
      required:
        - id
        - title
        - userIds
    ChatCreate:
      type: object
      properties:
        title:
          type: string
        userIds:
          type: array
          items:
            type: string
            format: uuid
      required:
        - title
        - userIds
  parameters:
    chatId:
      in: path
      name: chatId
      description: The chat id
      required: true
      schema:
        type: string
        format: uuid
    userId:
      in: path
      name: userId
      description: The user id
      required: true
      schema:
        type: string
        format: uuid
